// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Obralia.Infrastructure.Data;

#nullable disable

namespace Obralia.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250528112341_AddScheduleJsonColumn")]
    partial class AddScheduleJsonColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Obralia.Domain.Models.Availability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProfessionalProfileId")
                        .HasColumnType("uuid");

                    b.Property<string>("ScheduleJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionalProfileId")
                        .IsUnique();

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("Obralia.Domain.Models.ClientProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ActiveProjects")
                        .HasColumnType("integer");

                    b.Property<int>("CompletedProjects")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalSpent")
                        .HasColumnType("numeric");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ClientProfiles");
                });

            modelBuilder.Entity("Obralia.Domain.Models.ProfessionalProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ActiveProjects")
                        .HasColumnType("integer");

                    b.Property<int>("CompletedProjects")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("numeric");

                    b.Property<List<string>>("Specialties")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfessionalProfiles");
                });

            modelBuilder.Entity("Obralia.Domain.Models.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Average")
                        .HasColumnType("double precision");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProfessionalProfileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionalProfileId")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Obralia.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsProfessional")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Obralia.Domain.Models.Availability", b =>
                {
                    b.HasOne("Obralia.Domain.Models.ProfessionalProfile", "ProfessionalProfile")
                        .WithOne("Availability")
                        .HasForeignKey("Obralia.Domain.Models.Availability", "ProfessionalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalProfile");
                });

            modelBuilder.Entity("Obralia.Domain.Models.ClientProfile", b =>
                {
                    b.HasOne("Obralia.Domain.Models.User", "User")
                        .WithOne("ClientProfile")
                        .HasForeignKey("Obralia.Domain.Models.ClientProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obralia.Domain.Models.ProfessionalProfile", b =>
                {
                    b.HasOne("Obralia.Domain.Models.User", "User")
                        .WithOne("ProfessionalProfile")
                        .HasForeignKey("Obralia.Domain.Models.ProfessionalProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Obralia.Domain.Models.Rating", b =>
                {
                    b.HasOne("Obralia.Domain.Models.ProfessionalProfile", "ProfessionalProfile")
                        .WithOne("Ratings")
                        .HasForeignKey("Obralia.Domain.Models.Rating", "ProfessionalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfessionalProfile");
                });

            modelBuilder.Entity("Obralia.Domain.Models.ProfessionalProfile", b =>
                {
                    b.Navigation("Availability");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Obralia.Domain.Models.User", b =>
                {
                    b.Navigation("ClientProfile");

                    b.Navigation("ProfessionalProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
